var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeRequest = void 0;
const axios_1 = require("axios");
const await_to_js_1 = require("await-to-js");
const BASE_URL = 'http://ergast.com/api/f1';
const makeRequest = (url, parser, ...extraParams) => __awaiter(this, void 0, void 0, function* () {
    const [err, response] = yield (0, await_to_js_1.default)(axios_1.default.get(`${BASE_URL}${url}.json`));
    if (err) {
        throw err;
    }
    return parser.parse.apply(null, [cleanResponses(response === null || response === void 0 ? void 0 : response.data), ...extraParams]);
});
exports.makeRequest = makeRequest;
const cleanResponses = (data) => {
    const MRData = data === null || data === void 0 ? void 0 : data.MRData;
    if (!MRData) {
        return null;
    }
    return MRData.DriverTable || MRData.ConstructorTable || MRData.StandingsTable || MRData.RaceTable;
};
